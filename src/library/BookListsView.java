/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import libraryserver.Borrowed;
import libraryserver.Books;
import libraryserver.User;
import libraryserver.BorrowedInterface;
import libraryserver.BooksInterface;
import java.awt.Dimension;
import java.awt.Image;
import java.net.MalformedURLException;
import java.rmi.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import libraryserver.UsersInterface;

/**
 *
 * @author Prince
 */
public class BookListsView extends javax.swing.JFrame {
    
    private String[] search_type_array = {"User", "Book"};
    private int result_panel_height = 0;
    private int history_panel_height = 0;

    /**
     * Creates new form BookListsView
     */
    public BookListsView() {
        initComponents();
        //this.resultItemPanel.setPreferredSize(new Dimension(428, 130));
        //140
        //this.resultItemPanel.setBounds(10, 10, 428, 130);
        //this.searchResultPanel.add(resultItemPanel);
        
        this.searchResultPanel.setLayout(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        viewImage = new javax.swing.JLabel();
        viewPrimary = new javax.swing.JLabel();
        viewSecondary = new javax.swing.JLabel();
        viewTeritiary = new javax.swing.JLabel();
        history_scrol = new javax.swing.JScrollPane();
        history_panel = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel3 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        search_type = new javax.swing.JComboBox<>();
        resultScrolPanel = new javax.swing.JScrollPane();
        searchResultPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        createUserMenu = new javax.swing.JMenuItem();
        addBookMenu = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        exit_library = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        viewImage.setText("Image");

        viewPrimary.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        viewPrimary.setText("Title or Name");

        viewSecondary.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        viewSecondary.setText("Secondary");

        viewTeritiary.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        viewTeritiary.setText("Teritiary");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewImage, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewPrimary, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewSecondary, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewTeritiary, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(viewPrimary, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewSecondary, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewTeritiary, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addComponent(viewImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout history_panelLayout = new javax.swing.GroupLayout(history_panel);
        history_panel.setLayout(history_panelLayout);
        history_panelLayout.setHorizontalGroup(
            history_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 842, Short.MAX_VALUE)
        );
        history_panelLayout.setVerticalGroup(
            history_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );

        history_scrol.setViewportView(history_panel);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(history_scrol, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(history_scrol))
        );

        searchField.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        searchField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldMouseClicked(evt);
            }
        });
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        search_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User", "Book" }));
        search_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_typeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchField)
                .addGap(18, 18, 18)
                .addComponent(search_type, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(search_type, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(searchField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout searchResultPanelLayout = new javax.swing.GroupLayout(searchResultPanel);
        searchResultPanel.setLayout(searchResultPanelLayout);
        searchResultPanelLayout.setHorizontalGroup(
            searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 487, Short.MAX_VALUE)
        );
        searchResultPanelLayout.setVerticalGroup(
            searchResultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 748, Short.MAX_VALUE)
        );

        resultScrolPanel.setViewportView(searchResultPanel);

        jMenu2.setText("Manage");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });

        createUserMenu.setText("Create User");
        createUserMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserMenuActionPerformed(evt);
            }
        });
        jMenu2.add(createUserMenu);

        addBookMenu.setText("Add New Book");
        addBookMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookMenuActionPerformed(evt);
            }
        });
        jMenu2.add(addBookMenu);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Options");

        jMenuItem2.setText("Credits");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        exit_library.setText("Exit");
        exit_library.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_libraryActionPerformed(evt);
            }
        });
        jMenu1.add(exit_library);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(808, 808, 808)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(resultScrolPanel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultScrolPanel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void createUserMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserMenuActionPerformed
        // TODO add your handling code here:
        
        Library.creation_page.start();
        
    }//GEN-LAST:event_createUserMenuActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void exit_libraryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_libraryActionPerformed
        // TODO add your handling code here:

        Library.closeLibrary();
        
    }//GEN-LAST:event_exit_libraryActionPerformed

    private void search_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_typeActionPerformed
        // TODO add your handling code here:
        
        //this.result_item_title.setText(this.search_type_array[this.search_type.getSelectedIndex()]);
        
    }//GEN-LAST:event_search_typeActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        
        this.clearResultPanel();
        
        String type = this.search_type_array[this.search_type.getSelectedIndex()];
        
        if(type == "User"){
            
            this.searchUser();
            
        }else{
            
            this.searchBook();
            
        }
        
    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldMouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_searchFieldMouseClicked

    private void addBookMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookMenuActionPerformed
        // TODO add your handling code here:
        
        Library.book_page.start();
        
    }//GEN-LAST:event_addBookMenuActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        
        Library.credit_page.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public void clearResultPanel(){
        this.searchResultPanel.setVisible(false);
        this.searchResultPanel.removeAll();
        this.searchResultPanel.setPreferredSize(new Dimension(460, 740));
        this.searchResultPanel.setVisible(true);
        this.result_panel_height = 0;
    }
    
    public void viewUser(User user){
        
        this.viewPrimary.setText("Name: "+user.name);
        this.viewSecondary.setText("");
        this.viewTeritiary.setText("");
        this.viewImage.setIcon(new ImageIcon(new ImageIcon("default_user.jpg").getImage().getScaledInstance(viewImage.getWidth(), viewImage.getHeight(), Image.SCALE_SMOOTH)));
        
        this.clearHistoryPanel();
        this.searchBorrowed(user, null);
        
    }
    
    public void viewBook(Books book){
        
        this.viewPrimary.setText("Title: "+book.title);
        this.viewSecondary.setText("Category: "+book.category);
        this.viewTeritiary.setText("Shelf: "+book.shelf_number);
        this.viewImage.setIcon(new ImageIcon(new ImageIcon("default_book.png").getImage().getScaledInstance(viewImage.getWidth(), viewImage.getHeight(), Image.SCALE_SMOOTH)));
        
        this.clearHistoryPanel();
        this.searchBorrowed(null, book);
        
    }
    
    public void searchBorrowed(User user, Books book){
        
        ArrayList<Borrowed> b_list;
        
        try {
            
            BorrowedInterface borrow_db = (BorrowedInterface) Naming.lookup("rmi://"+Library.server_adress+"/Borrowed");
            //ArrayList<User> result = (ArrayList) borrow_db.search(name);
            
            if(user != null){
                b_list = (ArrayList) borrow_db.customerStatus(user.id, "gaven");
            }else if(book != null){
                b_list = (ArrayList) borrow_db.bookStatus(book.id, "gaven");
            }else{
                b_list = new ArrayList<Borrowed>();
            }

            for(Borrowed item:b_list){
                this.addHistoryItem(item);
            }
            
        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "RemoteException", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public void addHistoryItem(Borrowed borrow_item){
        
        User us = this.getUser(borrow_item.customer);
        Books bk = this.getBook(borrow_item.book);
        
        if(us == null || bk == null){
            return;
        }
        
        JPanel h_item = new JPanel();
        JLabel b_title = new JLabel();
        JLabel u_title = new JLabel();
        JLabel date = new JLabel();
        JLabel stat = new JLabel();
        JButton ret = new JButton();
        
        h_item.setBackground(new java.awt.Color(105, 65, 57));
        h_item.setLayout(null);
        h_item.setBounds(10, this.history_panel_height + 10, 686,150);

        b_title.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18));
        b_title.setForeground(new java.awt.Color(255, 255, 255));
        b_title.setText(bk.title);
        b_title.setBounds(10, 10, 200, 25);

        u_title.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18));
        u_title.setForeground(new java.awt.Color(255, 255, 255));
        u_title.setText(us.name);
        u_title.setBounds(10, 55, 200, 25);

        date.setFont(new java.awt.Font("Segoe UI Historic", 0, 18));
        date.setForeground(new java.awt.Color(255, 255, 255));
        date.setText(borrow_item.date);
        date.setBounds(10, 100, 90, 25);

        stat.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14));
        stat.setForeground(new java.awt.Color(255, 255, 255));
        stat.setText(borrow_item.status);
        stat.setBounds(639, 10, 50, 20);
        
        ret.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        ret.setBackground(new java.awt.Color(0, 195, 255));
        ret.setForeground(new java.awt.Color(255, 255, 255));
        ret.setText("Return");
        ret.setBounds(619, 108, 57, 32);
        ret.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBook(us.id, bk.id);
            }
        });
        
        if(borrow_item.status == "returned"){
            ret.setEnabled(false);
        }
        
        h_item.add(b_title);
        h_item.add(u_title);
        h_item.add(date);
        h_item.add(stat);
        h_item.add(ret);
        
        this.history_panel_height += 160;
        
        this.history_panel.setLayout(null);
        
        if(this.history_panel.getHeight() >= this.history_panel_height){
            this.history_panel.setPreferredSize(new Dimension(842, 573));
        }else{
            this.history_panel.setPreferredSize(new Dimension(842, this.history_panel_height + 10));
        }
        
        this.history_panel.add(h_item);
        
    }
    
    public Books getBook(int b_id){
        
        try {
            
            BooksInterface borrow_db = (BooksInterface) Naming.lookup("rmi://"+Library.server_adress+"/Books");
            //ArrayList<User> result = (ArrayList) borrow_db.search(name);
            return (Books) borrow_db.find(b_id);
            
        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "RemoteException", JOptionPane.ERROR_MESSAGE);
        }
        
        return null;
        
    }
    
    public User getUser(int u_id){
        
        try {
            
            UsersInterface borrow_db = (UsersInterface) Naming.lookup("rmi://"+Library.server_adress+"/Users");
            //ArrayList<User> result = (ArrayList) borrow_db.search(name);
            return (User) borrow_db.find(u_id);
            
        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "RemoteException", JOptionPane.ERROR_MESSAGE);
        }
        
        return null;
        
    }
    
    public void searchUser(){
        
        try {
            
            String name = this.searchField.getText();
            
            if(!name.isEmpty()){
                
                UsersInterface user_db = (UsersInterface) Naming.lookup("rmi://"+Library.server_adress+"/Users");
                ArrayList<User> result = (ArrayList) user_db.search(name);
                
                for(User item:result){
                    this.addUserResultItem(item);
                }
                
            }
            else{
                this.clearResultPanel();
            }
            
        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "RemoteException", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public void searchBook(){
        
        try {

            
            String title = this.searchField.getText();
            
            if(!title.isEmpty()){
                
                BooksInterface book_db = (BooksInterface) Naming.lookup("rmi://"+Library.server_adress+"/Books");
                ArrayList<Books> result = (ArrayList) book_db.search(title);
                
                for(Books item:result){
                    
                    this.addBookResultItem(item);
                    
                }
                
            }
            else{
                this.clearResultPanel();
            }
            
        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
    }
    
    public void addUserResultItem(User user_item){
        
        Dimension dm = this.searchResultPanel.getPreferredSize(); 
        
        JPanel resultItem = new JPanel();
        JLabel my_item_title = new JLabel();
        JLabel my_item_image = new JLabel();
        JButton item_btn = new JButton();
        JButton delete_item = new JButton();
        JButton update_item = new JButton();
        JButton borrow_item = new JButton();
        
        resultItem.setBounds(10, this.result_panel_height + 10, 428, 130);
        resultItem.setBackground(new java.awt.Color(204, 204, 204));
        resultItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resultItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resultItem.setLayout(null);
        
        my_item_title.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18));
        my_item_title.setBounds(218, 10, 200, 60);
        my_item_title.setText(user_item.name);
        
        my_item_image.setBounds(10, 10, 102, 110);
        my_item_image.setIcon(new ImageIcon(new ImageIcon("default_user.jpg").getImage().getScaledInstance(my_item_image.getWidth(), my_item_image.getHeight(), Image.SCALE_SMOOTH)));
        
        item_btn.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        item_btn.setBackground(new java.awt.Color(0, 195, 255));
        item_btn.setText("View");
        item_btn.setBounds(356, 88, 57, 32);
        item_btn.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewUser(user_item);
            }
        });
        
        
        delete_item.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        delete_item.setBackground(new java.awt.Color(255, 67, 98));
        delete_item.setText("Delete");
        delete_item.setBounds(294, 88, 57, 32);
        delete_item.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUser(user_item);
            }
        });
        
        
        update_item.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        update_item.setBackground(new java.awt.Color(255, 195, 0));
        update_item.setText("Update");
        update_item.setBounds(232, 88, 57, 32);
        update_item.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Library.update_user.start(user_item);
            }
        });
        
        
        borrow_item.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        borrow_item.setBackground(new java.awt.Color(0, 200, 92));
        borrow_item.setText("Borrow");
        borrow_item.setBounds(170, 88, 57, 32);
        borrow_item.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowUser(user_item);
            }
        });
        
        resultItem.add(item_btn);
        resultItem.add(my_item_title);
        resultItem.add(my_item_image);
        resultItem.add(delete_item);
        resultItem.add(update_item);
        resultItem.add(borrow_item);
        
        resultItem.setVisible(true);

        this.result_panel_height += 140;
        
        if(dm.height > this.result_panel_height){
            
            this.resultScrolPanel.setVisible(false);
            this.searchResultPanel.add(resultItem);
            this.resultScrolPanel.setVisible(true);
            
        }else{
            
            this.resultScrolPanel.setVisible(false);
            this.searchResultPanel.setPreferredSize(new Dimension(460, this.result_panel_height + 10));
            this.searchResultPanel.add(resultItem);
            this.resultScrolPanel.setVisible(true);
            
        }
        
    }
    
    public void addBookResultItem(Books book_item){
        
        Dimension dm = this.searchResultPanel.getPreferredSize(); 
        
        JPanel resultItem = new JPanel();
        JLabel my_item_title = new JLabel();
        JLabel my_item_image = new JLabel();
        JButton item_btn = new JButton();
        JButton delete_item = new JButton();
        JButton update_item = new JButton();
        JButton borrow_item = new JButton();
        
        resultItem.setBounds(10, this.result_panel_height + 10, 428, 130);
        resultItem.setBackground(new java.awt.Color(204, 204, 204));
        resultItem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        resultItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        resultItem.setLayout(null);
        
        my_item_title.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18));
        my_item_title.setBounds(218, 10, 200, 60);
        my_item_title.setText(book_item.title);
        
        my_item_image.setBounds(10, 10, 102, 110);
        my_item_image.setIcon(new ImageIcon(new ImageIcon("default_book.png").getImage().getScaledInstance(my_item_image.getWidth(), my_item_image.getHeight(), Image.SCALE_SMOOTH)));
        
        item_btn.setFont(new java.awt.Font("Segoe UI Symbol", 0, 14)); // NOI18N
        item_btn.setBackground(new java.awt.Color(0, 195, 255));
        item_btn.setText("View");
        item_btn.setBounds(356, 88, 57, 32);
        item_btn.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBook(book_item);
            }
        });
        
        
        delete_item.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        delete_item.setBackground(new java.awt.Color(255, 67, 98));
        delete_item.setText("Delete");
        delete_item.setBounds(294, 88, 57, 32);
        delete_item.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBook(book_item);
            }
        });
        
        
        update_item.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        update_item.setBackground(new java.awt.Color(255, 195, 0));
        update_item.setText("Update");
        update_item.setBounds(232, 88, 57, 32);
        update_item.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Library.update_book.start(book_item);
            }
        });
        
        
        borrow_item.setFont(new java.awt.Font("Segoe UI Symbol", 0, 10)); // NOI18N
        borrow_item.setBackground(new java.awt.Color(0, 200, 92));
        borrow_item.setText("Borrow");
        borrow_item.setBounds(170, 88, 57, 32);
        borrow_item.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowBook(book_item);
            }
        });
        
        resultItem.add(item_btn);
        resultItem.add(my_item_title);
        resultItem.add(my_item_image);
        resultItem.add(delete_item);
        resultItem.add(update_item);
        resultItem.add(borrow_item);
        
        resultItem.setVisible(true);

        this.result_panel_height += 140;
        
        if(dm.height > this.result_panel_height){
            
            this.resultScrolPanel.setVisible(false);
            this.searchResultPanel.add(resultItem);
            this.resultScrolPanel.setVisible(true);
            
        }else{
            
            this.resultScrolPanel.setVisible(false);
            this.searchResultPanel.setPreferredSize(new Dimension(460, this.result_panel_height + 10));
            this.searchResultPanel.add(resultItem);
            this.resultScrolPanel.setVisible(true);
            
        }
        
    }
    
    public void deleteUser(User user_item){
        
        try {
            // TODO add your handling code here:

            UsersInterface user_db = (UsersInterface) Naming.lookup("rmi://"+Library.server_adress+"/Users");
            
            if(user_db.delete(user_item.id)){
                
                this.clearResultPanel();
                this.searchUser();
                JOptionPane.showMessageDialog(null, "User Deleted", "Delete Message", JOptionPane.PLAIN_MESSAGE);
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Operation faild", "Faild Message", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
    }
    
    public void deleteBook(Books book_item){
        
        try {
            // TODO add your handling code here:

            BooksInterface book_db = (BooksInterface) Naming.lookup("rmi://"+Library.server_adress+"/Books");
            
            if(book_db.delete(book_item.id)){
                
                this.clearResultPanel();
                this.searchBook();
                JOptionPane.showMessageDialog(null, "Book Deleted", "Delete Message", JOptionPane.PLAIN_MESSAGE);
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Operation faild", "Faild Message", JOptionPane.ERROR_MESSAGE);
            }
            
        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        
    }
    
    public void returnBook(int user, int book){
        
        try {
            
            BorrowedInterface borrow_db = (BorrowedInterface) Naming.lookup("rmi://"+Library.server_adress+"/Borrowed");
            //ArrayList<User> result = (ArrayList) borrow_db.search(name);
            
            Date date = new Date();
            
            borrow_db.update(user, book, "returned", date.getDay()+"/"+date.getMonth()+"/"+(1900+date.getYear()));
            
        } catch (NotBoundException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (MalformedURLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "RemoteException", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    public void borrowUser(User user_item){
        Library.user_borrow = user_item;
        
        if(Library.book_borrow != null){
            Library.borrow_page.start();
        }
        
    }
    
    public void borrowBook(Books book_item){
        Library.book_borrow = book_item;
        if(Library.user_borrow != null){
            Library.borrow_page.start();
        }
    }
    
    public void clearHistoryPanel(){
        this.history_panel.setVisible(false);
        this.history_panel.removeAll();
        this.history_panel.setPreferredSize(new Dimension(842, 573));
        this.history_panel_height = 0;
        this.history_panel.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookListsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookListsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookListsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookListsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookListsView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addBookMenu;
    private javax.swing.JMenuItem createUserMenu;
    private javax.swing.JMenuItem exit_library;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JPanel history_panel;
    private javax.swing.JScrollPane history_scrol;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane resultScrolPanel;
    private javax.swing.JTextField searchField;
    private javax.swing.JPanel searchResultPanel;
    private javax.swing.JComboBox<String> search_type;
    private javax.swing.JLabel viewImage;
    private javax.swing.JLabel viewPrimary;
    private javax.swing.JLabel viewSecondary;
    private javax.swing.JLabel viewTeritiary;
    // End of variables declaration//GEN-END:variables
}
